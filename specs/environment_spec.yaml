describe environments:
- before: |
    overridden_symbol = false
    defined_outer_symbol = true

- it cannot find undefined symbols: |
    expect (undefined_symbol).should_be (nil)

- it can find a symbol in the current scope: |
    in_the_same_example = true
    overridden_symbol = true
    expect (in_the_same_example).should_be (true)

- it cannot find a symbol from a sibling example: |
    expect (in_the_same_example).should_be (nil)

- it gets a clean environment for each example: |
    expect (overridden_symbol).should_be (false)

- it can find a symbol from the current before block: |
    expect (defined_outer_symbol).should_be (true)

#- it cannot find symbols defined in an inner scope: |
#    expect (defined_inner_symbol).should_be (nil)

- context when looking up symbols from a nested context:
    - before: |
        overridden_symbol = "overridden"
        defined_inner_symbol = true

    - it cannot find undefined symbols: |
        expect (undefined_outer_symbol).should_be (nil)

    - it can find a symbol in an outer scope: |
        expect (defined_outer_symbol).should_be (true)

    - it can find a symbol in the current scope: |
        in_the_nested_example = true
        define_inner_symbol = false
        expect (defined_inner_symbol).should_be (true)

    - it cannot find a symbol from a sibling example: |
        expect (in_the_nested_example).should_be (nil)

    - it cannot find a symbol from a parent example: |
        expect (in_the_same_example).should_be (nil)

    - it gets a clean environment for each example: |
        expect (overridden_symbol).should_be ("overridden")

    - it can find a symbol from the current before block: |
        expect (defined_inner_symbol).should_be (true)

    - it can find a symbol from the parent before block: |
        expect (defined_outer_symbol).should_be (true)

- context when looking up symbols from a nested before block:
    - before: |
        defined_outer_symbol_reference = defined_outer_symbol
        undefined_outer_symbol_reference = undefined_outer_symbol

    - it can find a symbol in an outer scope: |
        expect (defined_outer_symbol_reference).should_be (true)

    - it cannot find a symbol in a cousin example: |
        expect (in_the_nested_example).should_be (nil)

#    - it cannot find a symbol in a sibling context: |
#        expect (defined_inner_symbol).should_be (nil)
